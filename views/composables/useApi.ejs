<script>
    function useApi() {

        function removeMessage(id, params = {}) {
            let queryParams = new URLSearchParams(params);
            return fetch(`/messages/${id}?${queryParams.toString()}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(response => response.json())
                .then((response) => {
                    console.info({ response })
                    return response
                })
        }

        function getMessages(params = {}) {
            let queryParams = new URLSearchParams(params);
            let url = `/messages?${queryParams.toString()}`;
            return fetch(url)
                .then(response => response.json())
                .then(data => {
                    return data
                });
        }


        function updateMessageArchived(id, archived = false) {
            return fetch(`/messages/${id}/archived`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ archived })
            }).then(response => response.json())
                .then((res) => {
                    return res
                });
        }

        function saveMessage(formData) {

            if (formData._id) {
                return fetch(`/messages/${formData._id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                }).then(response => response.json())
                    .then((res) => {

                        return res
                    });
            }

            return fetch('/messages', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            }).then(response => response.json())
                .then((res) => {

                    return res
                });
        }

        return { saveMessage, getMessages, removeMessage,updateMessageArchived }
    }
</script>