<ul id="message-list" class="flex flex-col gap-4 list-none mb-0 w-1/2 pb-4 pt-4 ">

    <li id="li-template" data-template class="bg-grey-700 flex justify-between relative transition" onclick="app.messagesVM.select(event)">
        <div class="relative w-full">
            ${title} ${leftLabel}
            <br/>
            <i class="text-xs">${updatedAt}</i>
        </div>
        <%- include('./MessageRemoveIcon.ejs') %>
        ${isActiveStyle}
    </li>

</ul>
<button class="w-max p-2 mb-2 text-lg rounded-md shadow-md bg-gray-200 hover:bg-gray-300 text-gray-800"
    onclick="app.messagesVM.refreshMessages()">Refresh</button>
<style scoped>
    #message-list li {

        border-bottom: 1px solid #ccc;
        padding: 10px;
        cursor: pointer;
    }
</style>
<script>
    app.messagesVM = {}
    app.messagesVM.mounted = () => {
        app.messagesVM.refreshMessages();
    }
    app.messagesVM.select = function(e){
        console.log(e.target)
    }
    app.messagesVM.refreshMessages = async () => {
        const { getMessages } = useApi()
        let data = await getMessages()
        let mappings = {
            updatedAt(v){
                return moment(v).format('DD-MM-YYYY HH:mm')
            },
            leftLabel(item){
                return item.isActive||item.isDraft ? `<b style="position:absolute;right: -150px;top: 12px;">${item.isActive?'ACTIVE':'DRAFT'}</b>`:''
            },
            isActiveStyle(item){
                return item.isActive ? `
            <style scoped>
                li[data-id='${item._id}']{
                    background-color:#ffffff4d;
                }
                li[data-id='${item._id}']:hover{
                    background-color:#c3c5c34d;
                }
                <style>
            `:''
            }
        }
        app.messagesVM.list = virtualForEach('#li-template',data,item=>item.id).update(mappings)
        app.messagesVM.list.selectable(item=>{
            console.log({
                item
            })
            app.messagesFormVM.select(item)
        }, (id,items)=>items.find(i=>i._id==id))
        app.messagesVM.items = data
    }
    app.messagesVM.mounted()
</script>